Grammar

    0 $accept: P $end

    1 P: Seq

    2 Seq: Seq S
    3    | /* empty */

    4 S: A
    5  | T_IF '(' B ')' '{' S '}'
    6  | T_WHILE '(' B ')' '{' S '}'
    7  | T_DOWHILE '{' S '}' T_WHILE '(' B ')'

    8 A: T_ID '=' expr ';'

    9 expr: expr '+' expr
   10     | expr '-' expr
   11     | expr '*' expr
   12     | expr '/' expr
   13     | expr '^' expr
   14     | NUM
   15     | T_ID
   16     | '(' expr ')'

   17 B: B T_AND B
   18  | B T_OR B
   19  | T_NOT B
   20  | expr T_RELOP expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 7 16
')' (41) 5 6 7 16
'*' (42) 11
'+' (43) 9
'-' (45) 10
'/' (47) 12
';' (59) 8
'=' (61) 8
'^' (94) 13
'{' (123) 5 6 7
'}' (125) 5 6 7
error (256)
T_IF (258) 5
T_AND (259) 17
T_OR (260) 18
T_NOT (261) 19
T_WHILE (262) 6 7
T_DOWHILE (263) 7
T_RELOP (264) 20
T_ID (265) 8 15
NUM (266) 14


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
P (24)
    on left: 1, on right: 0
Seq (25)
    on left: 2 3, on right: 1 2
S (26)
    on left: 4 5 6 7, on right: 2 5 6 7
A (27)
    on left: 8, on right: 4
expr (28)
    on left: 9 10 11 12 13 14 15 16, on right: 8 9 10 11 12 13 16 20
B (29)
    on left: 17 18 19 20, on right: 5 6 7 17 18 19


state 0

    0 $accept: . P $end

    $default  reduce using rule 3 (Seq)

    P    go to state 1
    Seq  go to state 2


state 1

    0 $accept: P . $end

    $end  shift, and go to state 3


state 2

    1 P: Seq .
    2 Seq: Seq . S

    T_IF       shift, and go to state 4
    T_WHILE    shift, and go to state 5
    T_DOWHILE  shift, and go to state 6
    T_ID       shift, and go to state 7

    $default  reduce using rule 1 (P)

    S  go to state 8
    A  go to state 9


state 3

    0 $accept: P $end .

    $default  accept


state 4

    5 S: T_IF . '(' B ')' '{' S '}'

    '('  shift, and go to state 10


state 5

    6 S: T_WHILE . '(' B ')' '{' S '}'

    '('  shift, and go to state 11


state 6

    7 S: T_DOWHILE . '{' S '}' T_WHILE '(' B ')'

    '{'  shift, and go to state 12


state 7

    8 A: T_ID . '=' expr ';'

    '='  shift, and go to state 13


state 8

    2 Seq: Seq S .

    $default  reduce using rule 2 (Seq)


state 9

    4 S: A .

    $default  reduce using rule 4 (S)


state 10

    5 S: T_IF '(' . B ')' '{' S '}'

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 19


state 11

    6 S: T_WHILE '(' . B ')' '{' S '}'

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 20


state 12

    7 S: T_DOWHILE '{' . S '}' T_WHILE '(' B ')'

    T_IF       shift, and go to state 4
    T_WHILE    shift, and go to state 5
    T_DOWHILE  shift, and go to state 6
    T_ID       shift, and go to state 7

    S  go to state 21
    A  go to state 9


state 13

    8 A: T_ID '=' . expr ';'

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 22


state 14

   19 B: T_NOT . B

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 23


state 15

   15 expr: T_ID .

    $default  reduce using rule 15 (expr)


state 16

   14 expr: NUM .

    $default  reduce using rule 14 (expr)


state 17

   16 expr: '(' . expr ')'

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 24


state 18

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr
   20 B: expr . T_RELOP expr

    T_RELOP  shift, and go to state 25
    '+'      shift, and go to state 26
    '-'      shift, and go to state 27
    '*'      shift, and go to state 28
    '/'      shift, and go to state 29
    '^'      shift, and go to state 30


state 19

    5 S: T_IF '(' B . ')' '{' S '}'
   17 B: B . T_AND B
   18  | B . T_OR B

    T_AND  shift, and go to state 31
    T_OR   shift, and go to state 32
    ')'    shift, and go to state 33


state 20

    6 S: T_WHILE '(' B . ')' '{' S '}'
   17 B: B . T_AND B
   18  | B . T_OR B

    T_AND  shift, and go to state 31
    T_OR   shift, and go to state 32
    ')'    shift, and go to state 34


state 21

    7 S: T_DOWHILE '{' S . '}' T_WHILE '(' B ')'

    '}'  shift, and go to state 35


state 22

    8 A: T_ID '=' expr . ';'
    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '^'  shift, and go to state 30
    ';'  shift, and go to state 36


state 23

   17 B: B . T_AND B
   18  | B . T_OR B
   19  | T_NOT B .

    $default  reduce using rule 19 (B)


state 24

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr
   16     | '(' expr . ')'

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '^'  shift, and go to state 30
    ')'  shift, and go to state 37


state 25

   20 B: expr T_RELOP . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 38


state 26

    9 expr: expr '+' . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 39


state 27

   10 expr: expr '-' . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 40


state 28

   11 expr: expr '*' . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 41


state 29

   12 expr: expr '/' . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 42


state 30

   13 expr: expr '^' . expr

    T_ID  shift, and go to state 15
    NUM   shift, and go to state 16
    '('   shift, and go to state 17

    expr  go to state 43


state 31

   17 B: B T_AND . B

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 44


state 32

   18 B: B T_OR . B

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 45


state 33

    5 S: T_IF '(' B ')' . '{' S '}'

    '{'  shift, and go to state 46


state 34

    6 S: T_WHILE '(' B ')' . '{' S '}'

    '{'  shift, and go to state 47


state 35

    7 S: T_DOWHILE '{' S '}' . T_WHILE '(' B ')'

    T_WHILE  shift, and go to state 48


state 36

    8 A: T_ID '=' expr ';' .

    $default  reduce using rule 8 (A)


state 37

   16 expr: '(' expr ')' .

    $default  reduce using rule 16 (expr)


state 38

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr
   20 B: expr T_RELOP expr .

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '^'  shift, and go to state 30

    $default  reduce using rule 20 (B)


state 39

    9 expr: expr . '+' expr
    9     | expr '+' expr .
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '^'  shift, and go to state 30

    $default  reduce using rule 9 (expr)


state 40

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   10     | expr '-' expr .
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    '^'  shift, and go to state 30

    $default  reduce using rule 10 (expr)


state 41

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   11     | expr '*' expr .
   12     | expr . '/' expr
   13     | expr . '^' expr

    '^'  shift, and go to state 30

    $default  reduce using rule 11 (expr)


state 42

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   12     | expr '/' expr .
   13     | expr . '^' expr

    '^'  shift, and go to state 30

    $default  reduce using rule 12 (expr)


state 43

    9 expr: expr . '+' expr
   10     | expr . '-' expr
   11     | expr . '*' expr
   12     | expr . '/' expr
   13     | expr . '^' expr
   13     | expr '^' expr .

    '^'  shift, and go to state 30

    $default  reduce using rule 13 (expr)


state 44

   17 B: B . T_AND B
   17  | B T_AND B .
   18  | B . T_OR B

    T_OR  shift, and go to state 32

    $default  reduce using rule 17 (B)


state 45

   17 B: B . T_AND B
   18  | B . T_OR B
   18  | B T_OR B .

    $default  reduce using rule 18 (B)


state 46

    5 S: T_IF '(' B ')' '{' . S '}'

    T_IF       shift, and go to state 4
    T_WHILE    shift, and go to state 5
    T_DOWHILE  shift, and go to state 6
    T_ID       shift, and go to state 7

    S  go to state 49
    A  go to state 9


state 47

    6 S: T_WHILE '(' B ')' '{' . S '}'

    T_IF       shift, and go to state 4
    T_WHILE    shift, and go to state 5
    T_DOWHILE  shift, and go to state 6
    T_ID       shift, and go to state 7

    S  go to state 50
    A  go to state 9


state 48

    7 S: T_DOWHILE '{' S '}' T_WHILE . '(' B ')'

    '('  shift, and go to state 51


state 49

    5 S: T_IF '(' B ')' '{' S . '}'

    '}'  shift, and go to state 52


state 50

    6 S: T_WHILE '(' B ')' '{' S . '}'

    '}'  shift, and go to state 53


state 51

    7 S: T_DOWHILE '{' S '}' T_WHILE '(' . B ')'

    T_NOT  shift, and go to state 14
    T_ID   shift, and go to state 15
    NUM    shift, and go to state 16
    '('    shift, and go to state 17

    expr  go to state 18
    B     go to state 54


state 52

    5 S: T_IF '(' B ')' '{' S '}' .

    $default  reduce using rule 5 (S)


state 53

    6 S: T_WHILE '(' B ')' '{' S '}' .

    $default  reduce using rule 6 (S)


state 54

    7 S: T_DOWHILE '{' S '}' T_WHILE '(' B . ')'
   17 B: B . T_AND B
   18  | B . T_OR B

    T_AND  shift, and go to state 31
    T_OR   shift, and go to state 32
    ')'    shift, and go to state 55


state 55

    7 S: T_DOWHILE '{' S '}' T_WHILE '(' B ')' .

    $default  reduce using rule 7 (S)
